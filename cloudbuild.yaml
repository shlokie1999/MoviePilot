steps:

  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull', 'sonarsource/sonar-scanner-cli:latest']

  - name: 'sonarsource/sonar-scanner-cli:latest'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sonar-scanner \
          -Dsonar.organization=workspace1101 \
          -Dsonar.projectKey=workspace1101_testinggcp \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$$_SONAR_TOKEN
    secretEnv: ['_SONAR_TOKEN']
    
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y curl
        apt-get install -y jq
        _QUALITY_GATE_STATUS=$(curl -s -H "Authorization: Basic $(echo -n "$$SONAR_TOKEN:" | base64)" https://sonarcloud.io/api/qualitygates/project_status?projectKey=workspace1101_testinggcp | jq -r '.projectStatus.status')

        # _QUALITY_GATE_STATUS=$(curl -v -G -u $$_SONAR_TOKEN: https://sonarcloud.io/web_api/api/qualitygates/project_status?projectKey=workspace1101_testinggcp)
        # _QUALITY_GATE_STATUS=$(curl -s -G -u $$_SONAR_TOKEN: https://sonarcloud.io/api/qualitygates/project_status?projectKey=workspace1101_testinggcp)
        echo _QUALITY_GATE_STATUS
        if [ "$_QUALITY_GATE_STATUS" != "OK" ]; then
          echo "Quality gate is not OK: $_QUALITY_GATE_STATUS"
          exit 1
        fi
        # https://sonarcloud.io/web_api/api/qualitygates/project_status?deprecated=false&section=params
        
availableSecrets:
  secretManager:
  - versionName: projects/364895990307/secrets/sonarcloud-token/versions/2
    env: '_SONAR_TOKEN'  

 
  
